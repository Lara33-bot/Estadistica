import java.util.Scanner;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class Main {
  public static void main (String[]args) {
      Scanner input = new Scanner (System.in);
      boolean rept = true;
      while (rept)
      {
      String ingreso;
        /*Ingreso y validación de datos a analizar*/
        do{
            System.out.println("Ingrese al menos 2 números separados por ; sin dejar espacios y use . para los decimales");
            ingreso = input.nextLine();
            if(!validarCaracteres(ingreso) || convertirArray(ingreso).length < 2){ /*Llama al método validarCaracteres*/
                System.out.println("Entrada inválida o insuficiente, inténtalo de nuevo");
            }
        }while(!validarCaracteres(ingreso) || convertirArray(ingreso).length < 2);/*No termina el bucle hasta que la validación sea positiva*/
        double[] datos = convertirArray(ingreso);/*El método convertirArray convierte los números ingresados en un array y quedan guardados en esta variable*/
        /*Selección de cálculos a realizar*/
        System.out.println("Ingrese los calculos a realizar separados por ;");
        System.out.println("1 --> Calcular media\n" +
                "2 --> Calcular mediana\n" +
                "3 --> Calcular moda\n" +
                "4 --> Calcular rango\n" +
                "5 --> Calcular varianza\n" +
                "6 --> Calcular desviación estándar\n" +
                "7 --> Calcular frecuencia absoluta\n" +
                "8 --> Calcular frecuencia relativa\n" +
                "9 --> Calcular frecuencia relativa acumulada\n" +
                "10 --> Calcular frecuencia absoluta acumulada\n" +
                "11 --> Calcular frecuencia porcentual\n");
        input = new Scanner(System.in);

        String opcionesIngresadas = input.nextLine();
        double[] opciones = convertirArray(opcionesIngresadas);
        Object[] resultado = calcularFrecuenciaAbsoluta(datos);
        double[] numerosSinRepetir = (double[]) resultado[0];

        for(int i = 0; i<opciones.length; i++){
            if(opciones[i]==1){
                /*Ejecutar método correspondiente y mostrar resultado*/
            }
            if(opciones[i]==2){
                /*Ejecutar método correspondiente y mostrar resultado*/
                double mediana = calcularMediana(datos);
                System.out.println("La mediana es: "+mediana);
            }
            if(opciones[i]==3){
                /*Ejecutar método correspondiente y mostrar resultado*/
            }
            if(opciones[i]==4){
                /*Ejecutar método correspondiente y mostrar resultado*/
            }
            if(opciones[i]==5){
               /*Ejecutar método correspondiente y mostrar resultado*/
                    double[] varianzas = calcularVarianzas(datos);
                     System.out.println("Varianza Poblacional: " + varianzas[0]);
                     System.out.println("Varianza Muestral: " + varianzas[1]);
            }
            if(opciones[i]==6){
               /*Ejecutar método correspondiente y mostrar resultado*/
            double[] desviaciones = calcularDesviaciones(datos);
          System.out.println("Desviación estándar poblacional: " + desviaciones[0]);
        System.out.println("Desviación estándar muestral: " + desviaciones[1]);

           }

            if(opciones[i]==7){
               /*Ejecutar método correspondiente y mostrar resultado*/
                int[] frecuenciaAbsoluta = (int[]) resultado[1];
                System.out.println("Frecuencia absoluta:");
                for (int j = 0; j < frecuenciaAbsoluta.length; j++) {
                    System.out.println(numerosSinRepetir[j] +"  (FrecuenciaAbsoluta)---> "+frecuenciaAbsoluta[j]);
                }
            }
            if(opciones[i]==8){
                /*Ejecutar método correspondiente y mostrar resultado*/
            }
            if(opciones[i]==9){
                /*Ejecutar método correspondiente y mostrar resultado*/
            }
            if(opciones[i]==10){
                /*Ejecutar método correspondiente y mostrar resultado*/
              if(opciones[i]==10){
            int[] frecuenciaAbsoluta = (int[]) resultado[1];
            int[] frecuenciaAcumulada = calcularFrecuenciaAbsolutaAcumulada(frecuenciaAbsoluta);
           System.out.println("Valor  /  Frecuencia Absoluta  /  Frecuencia Absoluta Acumulada:");
            for (int j = 0; j < frecuenciaAcumulada.length; j++) {
            System.out.println(numerosSinRepetir[j] + "        " + frecuenciaAbsoluta[j] + "      " + frecuenciaAcumulada[j]);
          //FIJARSE COMO APARECE IMPRESO
              }
         }
            }
            if(opciones[i]==11){
                /*Ejecutar método correspondiente y mostrar resultado*/
            }
        }


    System.out.println("Seguir con el programa?? sí/no");
            String resp = input.nextLine().trim(). toLowerCase();
            if (resp.equals("si") || resp.equals("sí"))
            {
                rept = true;
            }
            else if (resp.equals("no"))
            {
                rept = false;
            }
            else
            {
                System.out.println("Reintentar. Seguir con el programa?");
            }
         }
    }
    public static boolean validarCaracteres(String ingreso) {
        boolean esInicioNumero = true; // Indica si estamos al inicio de un número

        for (int i = 0; i < ingreso.length(); i++) {
            char c = ingreso.charAt(i);
            if (!Character.isDigit(c) && c != '.' && c != ';' && c != '-') {
                return false;
            }
            if (c == '-') {
                if (i == ingreso.length() - 1 || (!esInicioNumero && ingreso.charAt(i - 1) != ';')) {
                    return false;
                }
            }
            esInicioNumero = (c == ';');
        }

        return true;
    }
    public static double[] convertirArray(String opcionesIngresadas){
        String[] opciones = opcionesIngresadas.split(";");
        double[] numeros = new double[opciones.length];
        for(int i=0; i<opciones.length; i++){
            numeros[i]= Double.parseDouble(opciones[i]);
        }
        return numeros;
    }
    public static double calcularMediana(double[] datos){
        int n = datos.length;
        double medianaCalculada;
        Arrays.sort(datos);
        if(n % 2 == 1){
            medianaCalculada = datos[(n-1)/2];
        }
        else{
            double medianaCalculada1 = datos[n/2 - 1];
            double medianaCalculada2 = datos[n/2];
            medianaCalculada = (medianaCalculada1+medianaCalculada2)/2;
        }
        return medianaCalculada;
    }
public static double [] calcularVarianzas(double[] datos){
   double sumv = 0, sumcuadrado = 0;

   for (int i = 0; i < datos.length; i++) {
       sumv = sumv + datos[i];
   }
     double mediav = sumv / datos.length;
   for (int i = 0; i < datos.length; i++) {
       double restav = datos[i] - mediav;
       sumcuadrado = sumcuadrado + (restav * restav);
   }
    double varianzapoblacional = sumcuadrado / datos.length;
    double varianzamuestral = sumcuadrado / (datos.length-1);

    return new double[]{varianzapoblacional, varianzamuestral};
}
public static double[] calcularDesviaciones(double[] datos) {
    double[] varianzas = calcularVarianzas(datos);
    double desvPoblacional = Math.sqrt(varianzas[0]);
    double desvMuestral = Math.sqrt(varianzas[1]);
    //para hacer raiz
    return new double[]{desvPoblacional, desvMuestral};
}


    public static Object[] calcularFrecuenciaAbsoluta(double[] datos){

        HashMap<Double, Integer> frecuencia = new HashMap<>();

        for (double num : datos) {
            if (frecuencia.containsKey(num)) {
                int contadorActual = frecuencia.get(num);
                frecuencia.put(num, contadorActual + 1);
            } else {
                frecuencia.put(num, 1);
            }
        }
        List<Double> clavesOrdenadas = new ArrayList<>(frecuencia.keySet());
        Collections.sort(clavesOrdenadas);
        double[] numerosSinRepetir = new double[clavesOrdenadas.size()];
        // Crear y llenar el array de frecuencias absolutas
        int[] frecuenciasArray = new int[clavesOrdenadas.size()];
        for (int i = 0; i < clavesOrdenadas.size(); i++) {
            numerosSinRepetir[i] = clavesOrdenadas.get(i);
            frecuenciasArray[i] = frecuencia.get(clavesOrdenadas.get(i));
        }


        return new Object[]{numerosSinRepetir, frecuenciasArray};
    }

  public static int [] calcularFrecuenciaAbsolutaAcumulada(int[] frecuenciaAbsoluta) {
    int [] acumulada = new int [frecuenciaAbsoluta.length];
    int suma = 0;
    for (int i = 0; i < frecuenciaAbsoluta.length; i ++) {
        suma = suma + frecuenciaAbsoluta[i];
        acumulada[i] = suma;
    }
    return acumulada;
  }
  }
